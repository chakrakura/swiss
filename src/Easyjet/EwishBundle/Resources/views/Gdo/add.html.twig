{% extends '@EasyjetEwish/Base/structure.html.twig' %}
{% import "@EasyjetSwissinsideCore/Base/macros.html.twig" as macros %}

{% block title %}Add GDO request{% endblock %}

{% block specificJs %}{{ parent() }}

<script>
    var maxDays = {{ maxDays }};
    var minDays = 1;
    var isPilot = "{{ isPilot }}";

    $( "#addGdoForm" ).submit(function( event ) {
        var startDate = convertDateFranceToEnglish($("#date").val());
        var endDate = convertDateFranceToEnglish($("#end").val());
        var nbDays = numberOfDaysBetweenTwoDates(startDate, endDate);
        var nextyear = $("#next-year").val();    
        var actualStartDate = $("#start-date").val();
        var actualEndDate = $("#end-date").val();
        var currentYearJanDate  = $("#current-year-jan-date").val();
        
        if (endDate < startDate)
        {
            alert ("Invalid date(s) please try again");
            return false;
        }
        if( !isPilot && startDate >= actualStartDate && startDate <= actualEndDate ) {
            if(nbDays > 4) {
                alert ("You cannot bid more than 4 days in the Christmas period (from dec 21st until jan 4th "+nextyear+" inclusiv).");
                return false;
            }
        } else if(endDate > currentYearJanDate && nbDays > 1) {
            alert ("You can only make single day off request.");
            return false;
        }
        if( nbDays>1 && endDate >= actualEndDate ) {
            alert("You cannot bid more than 4 days in the Christmas period (from dec 21st until jan 4th "+nextyear+" inclusiv).");
            return false;
        }
        if (nbDays > maxDays) {
            alert ("Period too long! You have to select a period from " + minDays + " to " + maxDays + " days.");
            return false;
        }
        if (nbDays < minDays) {
            alert ("Period too short You have to select a period from " + minDays + " to " + maxDays + " days.");
            return false;
        }
        var x = confirm("Have you cross checked the correct dates from your GDO days request ?");
        
        if(x == true) {
            return true;
        } else {
            return false;
        }
        
       
    });

   function convertDateFranceToEnglish(dateFr)
    {
        if(!dateFr) return "0000-00-00";
        var tmp = dateFr.split("/");
        return tmp[2] + "-" + tmp[1] + "-" + tmp[0];
    } 

    function numberOfDaysBetweenTwoDates(date1, date2)
    {
        var nbDays1 = 0;
        var nbDays2 = 0;
        var firstDayEarly = "";
        var lastDayEarly = "";

        if (date2 == "") date2 = date1;

        if (date1 < date2)
        {
            firstDayEarly = date1;
            lastDayEarly = date2;
        }
        else
        {
            firstDayEarly = date2;
            lastDayEarly = date1 ;
        }
        var first = firstDayEarly.split("-");
        var firstYear = convertToInt(first[0]);
        var firstMonth = convertToInt(first[1]);
        var firstDay = convertToInt(first[2]);

        var last = lastDayEarly.split("-");
        var lastYear = convertToInt(last[0]);
        var lastMonth = convertToInt(last[1]);
        var lastDay = convertToInt(last[2]);

        // Calculation of the number of days since the beginning of the year of the first date

        for (var i = 1; i < firstMonth; i++)
        {
            nbDays1 += parseInt(daysInMonth(i, firstYear));
        }
        nbDays1 += parseInt(firstDay);
        // Calculation of the number of days since the beginning of the second date
        for (var j = firstYear; j < lastYear; j++) nbDays2 += parseInt(nbDaysYear(j)) ;
        for (k = 1; k < lastMonth; k++) nbDays2 += parseInt(daysInMonth(k, lastYear));
        nbDays2 += parseInt(lastDay);
        return (nbDays2 - nbDays1) + 1 ;
    }
  

    function daysInMonth(month, year) {
        var nbDays = new Array('31','28','31','30','31','30','31','31','30','31','30','31') ;
        if ( year % 4 == 0 ) nbDays[1] = '29' ;
        return nbDays[month - 1] ;
    }

    function nbDaysYear( year )
    {
        var total = 0;
        for (i=1; i<=12; i++)
        {
            total += parseInt(daysInMonth (i, year));
        }
        return total;
    }

    function convertToInt( chain )
    {
        i = 0;
        if (chain == "" || chain == 0) return 0;
        while (chain.substring(i, i+1) == "0")
        {
            chain = chain.substring(1, chain.length);
            i++;
        }
        return parseInt(chain);
    }

</script>
{% endblock specificJs %}

{% block container %}

<div id="content">

    <div id="content-header">
        <h1 id="titre_help">Add GDO request</h1>  
    </div>

    <div class="row">
        <div class="col-xs-12">
            {{ macros.wizz() }}
        </div>
    </div>

    <form id ="addGdoForm" class="form-horizontal"  name="form1" method="post"  action = "{{ url( 'ewish_gdo_add_request' ) }}" class="formulaire1">
       
        <input name="nextyear" type="hidden" id="next-year" value="{{ nextYear }}" />
        <input name="startdate" type="hidden" id="start-date" value="{{ startDate }}" />
        <input name="enddate" type="hidden" id="end-date" value="{{ endDate }}" />
        <input name="currentyearjandate" type="hidden" id="current-year-jan-date" value="{{ currentYearJanDate }}" />

        <div class="row">
            <div class="col-xs-12">

                <div class="widget-box">

                    <div class="widget-title">
                        <span class="icon">
                            <i class="icon-th"></i>
                        </span>
                        <h5>Day off informations</h5>
                    </div>

                    <div class="widget-content nopadding">

                        <div class="form-group">
                            <label class="control-label">GDO day From :</label>
                            <div class="controls">
                                <input onchange="javascript:showHideMultipleDays()" id="date" name="date" type='text' id="date" value='{{ date }}' class = "form-control" readonly="readonly" />
                            </div>
                        </div>

                        <div id = "date-to-block" class = "form-group" style="display:{{ displayTo }};">
                            <label class="control-label" for="date">To :</label>                
                            <div class="controls">
                                <input name="end" class = "form-control" data-enable-datepicker type="text" id="end"   value="{{ date }}" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="comment">Comment</label>                
                            <div class="controls">
                                <textarea class = "form-control" name="comment" cols="50" rows="8" id="comment"></textarea>
                            </div>
                        </div>

                        <div class="form-actions">
                            <input name="submit"  class="btn btn-primary" type="submit" value="Submit">
                        </div>

                    </div>

                </div>

             </div>

        </div>

    </form>
</div>     
       
{% endblock container %}