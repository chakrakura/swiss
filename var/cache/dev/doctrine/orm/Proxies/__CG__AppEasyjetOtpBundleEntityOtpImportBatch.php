<?php

namespace Proxies\__CG__\App\Easyjet\OtpBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OtpImportBatch extends \App\Easyjet\OtpBundle\Entity\OtpImportBatch implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'id', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'importDate', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'exportedAt', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'cvpMonth', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'effectiveDate', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'removed', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'published', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'locked', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'importedBy', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'rows', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'otpFile'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'id', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'importDate', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'exportedAt', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'cvpMonth', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'effectiveDate', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'removed', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'published', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'locked', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'importedBy', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'rows', '' . "\0" . 'App\\Easyjet\\OtpBundle\\Entity\\OtpImportBatch' . "\0" . 'otpFile'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OtpImportBatch $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', []);

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function addRow(\App\Easyjet\OtpBundle\Entity\OtpImportRow $row)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRow', [$row]);

        return parent::addRow($row);
    }

    /**
     * {@inheritDoc}
     */
    public function getRows()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRows', []);

        return parent::getRows();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportDate', []);

        return parent::getImportDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setImportDate(\DateTime $importDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImportDate', [$importDate]);

        return parent::setImportDate($importDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEffectiveDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEffectiveDate', []);

        return parent::getEffectiveDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEffectiveDate(\DateTime $effectiveDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEffectiveDate', [$effectiveDate]);

        return parent::setEffectiveDate($effectiveDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportedBy', []);

        return parent::getImportedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setImportedBy(\App\Easyjet\UmanBundle\Entity\Users $importedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImportedBy', [$importedBy]);

        return parent::setImportedBy($importedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCvpMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCvpMonth', []);

        return parent::getCvpMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function setCvpMonth(\DateTime $cvpMonth = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCvpMonth', [$cvpMonth]);

        return parent::setCvpMonth($cvpMonth);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', []);

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished($published)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocked', []);

        return parent::getLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($locked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', [$locked]);

        return parent::setLocked($locked);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtpFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtpFile', []);

        return parent::getOtpFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtpFile($otpFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtpFile', [$otpFile]);

        return parent::setOtpFile($otpFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getExportedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExportedAt', []);

        return parent::getExportedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setExportedAt(\DateTime $exportedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExportedAt', [$exportedAt]);

        return parent::setExportedAt($exportedAt);
    }

}
