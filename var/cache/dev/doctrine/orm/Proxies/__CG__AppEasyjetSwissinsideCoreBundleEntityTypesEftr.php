<?php

namespace Proxies\__CG__\App\Easyjet\SwissinsideCoreBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TypesEftr extends \App\Easyjet\SwissinsideCoreBundle\Entity\TypesEftr implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'type', 'salaireBase', 'salaireBase3PremiersMois', 'paiementSecteursBase', 'employeeType', 'typeLabel', 'responsable'];
        }

        return ['__isInitialized__', 'id', 'type', 'salaireBase', 'salaireBase3PremiersMois', 'paiementSecteursBase', 'employeeType', 'typeLabel', 'responsable'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TypesEftr $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalaireBase($salaireBase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalaireBase', [$salaireBase]);

        return parent::setSalaireBase($salaireBase);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalaireBase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalaireBase', []);

        return parent::getSalaireBase();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalaireBase3PremiersMois($salaireBase3PremiersMois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalaireBase3PremiersMois', [$salaireBase3PremiersMois]);

        return parent::setSalaireBase3PremiersMois($salaireBase3PremiersMois);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalaireBase3PremiersMois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalaireBase3PremiersMois', []);

        return parent::getSalaireBase3PremiersMois();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaiementSecteursBase($paiementSecteursBase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaiementSecteursBase', [$paiementSecteursBase]);

        return parent::setPaiementSecteursBase($paiementSecteursBase);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaiementSecteursBase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaiementSecteursBase', []);

        return parent::getPaiementSecteursBase();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployeeType($employeeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployeeType', [$employeeType]);

        return parent::setEmployeeType($employeeType);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeeType', []);

        return parent::getEmployeeType();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeeTypeLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeeTypeLabel', []);

        return parent::getEmployeeTypeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeLabel($typeLabel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeLabel', [$typeLabel]);

        return parent::setTypeLabel($typeLabel);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeLabel', []);

        return parent::getTypeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponsable($responsable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponsable', [$responsable]);

        return parent::setResponsable($responsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponsable', []);

        return parent::getResponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
